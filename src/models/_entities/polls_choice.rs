//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "polls_choice")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub choice_text: String,
    pub votes: i32,
    pub question_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::polls_question::Entity",
        from = "Column::QuestionId",
        to = "super::polls_question::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PollsQuestion,
}

impl Related<super::polls_question::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PollsQuestion.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
